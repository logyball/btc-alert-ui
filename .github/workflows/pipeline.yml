name: ui
on:
  workflow_dispatch:
  pull_request:
    branches: 
       - main
  push:
    branches: 
       - main

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
   
      - name: terraform format
        run: terraform fmt -recursive -check
        working-directory: terraform

  plan:
    needs: [ 'format' ]
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - uses: ./.github/actions/plan

  apply:
    needs: [ 'format' ]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    outputs: 
      cloudfront-id: ${{ steps.tf-output.outputs.cloudfront }} 
      bucket-id: ${{ steps.tf-output.outputs.bucket }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: ./.github/actions/apply

      - name: tf outputs
        id: tf-output
        run: |
          cd terraform
          terraform init
          echo "::set-output name=cloudfront::$(terraform output -raw cloudfront_id)"
          echo "::set-output name=bucket::$(terraform output -raw website_bucket)"


  deploy-website:
    needs: [ 'apply' ]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: build static assets for distribution
        run: |
          npm install
          npm run build -- --mode=production
      
      - name: copy into website bucket
        run: aws --region us-east-1 s3 sync ./dist s3://${{ needs.apply.outputs.bucket-id }} --delete

      - name: invalidate cloudfront
        run: aws cloudfront create-invalidation --distribution-id ${{ needs.apply.outputs.cloudfront-id }} --paths "/*"
      


      
    